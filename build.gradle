plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'halfandhalf'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // mybatis 의존성 추가
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
    // mariadb 의존성 추가
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    // log4jdbc	의존성 추가
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    // JSON
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    //시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'com.google.code.gson:gson:2.8.9'
    // jjwt 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'  // API 의존성 추가
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2' // 구현 의존성 추가
    runtimeOnly 'io.jsonwebtoken:jjwt-orgjson:0.11.2' // JSON 처리 의존성 추가
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // jasypt yml 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    // selenium 크롤링
//    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.17.0'
//    testImplementation 'org.seleniumhq.selenium:selenium-java:4.17.0'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    systemProperty "jasypt.encryptor.password", project.getProperties().get("jasypt.encryptor.password")
}